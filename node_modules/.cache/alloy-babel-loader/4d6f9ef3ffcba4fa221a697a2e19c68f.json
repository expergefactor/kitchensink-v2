{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/cameraGallery.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/cameraGallery.js","mtime":1603117910002},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/views/phone/cameraGallery.xml","mtime":1603117232935},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/styles/phone/cameraGallery.tss","mtime":1603117222709},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/cameraGallery.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;AACA,GAAA,SAAA,WAAA,GAAA,CAEA,CAFA;;AAIA,WAAA,aAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,MAAA;;AAEA,YAAA,MAAA;AACA,WAAA,iBAAA;AACA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,CAAA;AACA;;AACA,WAAA,iBAAA;AACA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,CAAA;AACA;;AACA,WAAA,sBAAA;AACA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,CAAA;AACA;;AACA,WAAA,eAAA;AACA,QAAA,aAAA;AACA;;AACA,WAAA,iBAAA;AACA,QAAA,eAAA;AACA;;AACA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,8BAAA,MAAA;AACA;AAlBA;;AAqBA,eAAA;AACA,MAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA,CAAA,CAAA,YAAA,EAAA,CAAA,CAAA,SAAA;AACA;AACA;;AAEA,WAAA,UAAA,CAAA,UAAA,EAAA;AACA,IAAA,OAAA,CAAA,eAAA,CAAA,CAAA,qBAAA,CAAA,OAAA,IAAA;AACA,UAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,iBAAA,CAAA;AACA;AACA;;AACA,MAAA,EAAA,CAAA,KAAA,CAAA,UAAA,CAAA;AACA,QAAA,UAAA,EAAA,UADA;AAEA,QAAA,OAAA,EAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,2BAAA;AACA,UAAA,YAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACA,SALA;AAMA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA;AAAA,SAAA,KAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,2BAAA,KAAA;AACA,SARA;AASA,QAAA,MAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,sBAAA;AACA;AAXA,OAAA;AAaA,KAlBA;AAmBA;;AAEA,WAAA,YAAA,CAAA,KAAA,EAAA;AACA,UAAA,SAAA,GAAA,EAAA,CAAA,EAAA,CAAA,eAAA,CAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA,CAAA;AAKA,UAAA,KAAA,GAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA,CAAA;AAIA,IAAA,SAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,MAAA;AACA,MAAA,SAAA,CAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA;AADA,OAAA,EAEA,MAAA;AACA,QAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA;AACA,OAJA;AAKA,KANA;;AAQA,eAAA;AACA,MAAA,SAAA,CAAA,GAAA,CAAA,KAAA;AACA;;AACA,IAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,SAAA;AAEA,IAAA,SAAA,CAAA,OAAA,CAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA;;AAEA,WAAA,aAAA,GAAA;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CAAA;AACA,MAAA,eAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,GAFA;AAGA,MAAA,MAAA,EAAA,GAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA,CAAA,CADA,CAQA;;AACA,IAAA,EAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAA;AACA,MAAA,OAAA,EAAA,MAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,4CAAA;AACA,OAHA;AAIA,MAAA,KAAA,EAAA,CAAA;AAAA,QAAA;AAAA,OAAA,KAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,0CAAA,KAAA;AACA;AANA,KAAA;AAQA;;AAEA,WAAA,eAAA,GAAA;AACA,IAAA,OAAA,CAAA,eAAA,CAAA,CAAA,qBAAA,CAAA,OAAA,IAAA;AACA,UAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,iBAAA,CAAA;AACA;AACA;;AAEA,MAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,CAAA;AACA,QAAA,OAAA,EAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,0BAAA;AACA,UAAA,YAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACA,SAJA;AAKA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA;AAAA,SAAA,KAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,0BAAA,KAAA;AACA,SAPA;AAQA,QAAA,MAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA,qCAAA;AACA;AAVA,OAAA;AAYA,KAlBA;AAmBA,G","sourcesContent":["\n\n/**\n* The scoped constructor of the controller.\n**/\n(function constructor() {\n\n})();\n\nfunction openComponent(e) {\n  const action = e.itemId;\n\n  switch (action) {\n    case 'showCameraPhoto':\n      showCamera([Ti.Media.MEDIA_TYPE_PHOTO]);\n      break;\n    case 'showCameraVideo':\n      showCamera([Ti.Media.MEDIA_TYPE_VIDEO]);\n      break;\n    case 'showCameraPhotoVideo':\n      showCamera([Ti.Media.MEDIA_TYPE_PHOTO, Ti.Media.MEDIA_TYPE_VIDEO]);\n      break;\n    case 'saveToGallery':\n      saveToGallery();\n      break;\n    case 'openFromGallery':\n      openFromGallery();\n      break;\n    default:\n      logger.log('Ti.Media', 'Unknown action selected: ' + action);\n      break;}\n\n\n  if (OS_IOS) {\n    e.source.deselectItem(e.sectionIndex, e.itemIndex);\n  }\n}\n\nfunction showCamera(mediaTypes) {\n  require('@/permissions').checkCameraPermission(success => {\n    if (!success) {\n      alert('No permissions!');\n      return;\n    }\n    Ti.Media.showCamera({\n      mediaTypes: mediaTypes,\n      success: e => {\n        logger.log('Ti.Media', 'Image taken successfully!');\n        processImage(e.media);\n      },\n      error: ({ error }) => {\n        logger.log('Ti.Media', 'Error showing camera: ' + error);\n      },\n      cancel: () => {\n        logger.log('Ti.Media', 'Camera was cancelled');\n      } });\n\n  });\n}\n\nfunction processImage(image) {\n  const imageView = Ti.UI.createImageView({\n    image: image,\n    opacity: 0 });\n\n\n  const label = Ti.UI.createLabel({\n    text: 'Tap to close' });\n\n\n  imageView.addEventListener('click', () => {\n    imageView.animate({\n      opacity: 0 },\n    () => {\n      $.window.remove(imageView);\n    });\n  });\n\n  if (OS_IOS) {\n    imageView.add(label);\n  }\n  $.window.add(imageView);\n\n  imageView.animate({\n    opacity: 1 });\n\n}\n\nfunction saveToGallery() {\n  const view = Ti.UI.createView({\n    backgroundColor: 'red',\n    width: 400,\n    height: 400,\n    borderRadius: 200 });\n\n\n  // Convert the view to an image-blog and save it to your Gallery\n  Ti.Media.saveToPhotoGallery(view.toImage(), {\n    success: () => {\n      logger.log('Ti.Media', 'Image saved to photo-gallery successfully!');\n    },\n    error: ({ error }) => {\n      logger.log('Ti.Media', 'Error saving image to photo-gallery: ' + error);\n    } });\n\n}\n\nfunction openFromGallery() {\n  require('@/permissions').checkCameraPermission(success => {\n    if (!success) {\n      alert('No permissions!');\n      return;\n    }\n\n    Ti.Media.openPhotoGallery({\n      success: e => {\n        logger.log('Ti.Media', 'Image open successfully!');\n        processImage(e.media);\n      },\n      error: ({ error }) => {\n        logger.log('Ti.Media', 'Error opening image: ' + error);\n      },\n      cancel: () => {\n        logger.log('Ti.Media', 'Opening photo-gallery was cancelled');\n      } });\n\n  });\n}"]}]}