{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/shortcutItems.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/shortcutItems.js","mtime":1603117181831},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/views/phone/shortcutItems.xml","mtime":1603117232941},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/styles/phone/shortcutItems.tss","mtime":1603117222717},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/shortcutItems.js"],"names":[],"mappings":"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","sourcesContent":["\nlet appShortcuts;\n\n/**\n                   * The scoped constructor of the controller.\n                   **/\n(function constructor() {\n  // If supported, create an applicationShortcuts instance\n  if (Ti.UI.iOS.forceTouchSupported) {\n    appShortcuts = Ti.UI.iOS.createApplicationShortcuts();\n  }\n\n})();\n\n/**\n       * Event handler set in view to list all static shortcuts\n       */\n\nfunction listStaticShortcuts() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  logger.log('Ti.UI.iOS.ApplicationShortcuts.listStaticShortcuts', appShortcuts.listStaticShortcuts());\n}\n\n/**\n   * Event handler set in view to list all dynamic shortcuts\n   */\n\nfunction listDynamicShortcuts() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  const res = appShortcuts.listDynamicShortcuts();\n\n  logger.log('Ti.UI.iOS.ApplicationShortcuts.listDynamicShortcuts', res);\n\n  // If don't have any, explain how to create it\n  if (res.length === 0) {\n    Ti.UI.createAlertDialog({\n      title: 'None',\n      message: 'Use createDynamicShortcut() to create a dynamic shortcut.' }).\n    show();\n  }\n}\n\n/**\n   * Event handler set in view to check if our dynamic shortcut exists\n   */\n\nfunction dynamicShortcutExists() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  const res = appShortcuts.dynamicShortcutExists('details');\n\n  logger.log('Ti.UI.iOS.ApplicationShortcuts.dynamicShortcutExists', 'details', res);\n\n  // If don't have it, explain how to create it\n  if (!res) {\n    Ti.UI.createAlertDialog({\n      title: 'Does not exist',\n      message: 'Use createDynamicShortcut() to create a dynamic shortcut.' }).\n    show();\n  }\n}\n\n/**\n   * Event handler set in view to get our dynamic shortcut\n   */\n\nfunction getDynamicShortcut() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  const res = appShortcuts.getDynamicShortcut('details');\n\n  logger.log('Ti.UI.iOS.ApplicationShortcuts.getDynamicShortcut', 'details', res);\n\n  // If don't have it, explain how to create it\n  if (!res) {\n    Ti.UI.createAlertDialog({\n      title: 'Does not exist',\n      message: 'Use createDynamicShortcut() to create a dynamic shortcut.' }).\n    show();\n  }\n}\n\n/**\n   * Event handler set in view to remove our dynamic shortcut\n   */\n\nfunction removeDynamicShortcut() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  appShortcuts.removeDynamicShortcut('details');\n\n  // Explain how to (re)create it\n  Ti.UI.createAlertDialog({\n    title: 'Removed',\n    message: 'Use createDynamicShortcut() to create a dynamic shortcut.' }).\n  show();\n}\n\n/**\n   * Event handler set in view to create a new dynamic shortcuts\n   */\n\nfunction createDynamicShortcut() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  appShortcuts.addDynamicShortcut({\n\n    // Must be unique to identify it in the shortcutitemclick-listener in index.js\n    itemtype: 'details',\n\n    title: 'Titanium rocks!',\n    subtitle: '(Dynamically created)',\n\n    // A grey-scale icon of 35x35dp\n    icon: 'images/icons/shortcutItemIcon.png',\n\n    // Or a system-provided icon\n    // icon: Ti.UI.iOS.SHORTCUT_ICON_TYPE_LOVE,\n\n    // A custom payload\n    userInfo: {\n      created_at: Date.now() } });\n\n\n}\n\n/**\n   * Event handler set in view to remove all dynamic shortcuts\n   */\n\nfunction removeAllDynamicShortcuts() {\n  if (!appShortcuts) {\n    alert('This device does not support Force Touch');\n    return;\n  }\n\n  appShortcuts.removeAllDynamicShortcuts();\n\n  // Explain how to create our dynamic shortcut\n  Ti.UI.createAlertDialog({\n    title: 'Removed',\n    message: 'Use createDynamicShortcut() to create a dynamic shortcut.' }).\n  show();\n}"]}]}