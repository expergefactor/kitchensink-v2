{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/gradients.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/gradients.js","mtime":1603117181809},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/views/controls/views/gradients.xml","mtime":1603117232923},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/styles/controls/views/gradients.tss","mtime":1603117222698},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/gradients.js"],"names":[],"mappings":"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","sourcesContent":["\n\nlet normalizedCenterX;\nlet normalizedCenterY;\nlet colors;\nlet Gradient;\nlet gradientTypes;\nlet selectedGradient;\n\n/**\n                       * The scoped constructor of the controller.\n                       **/\n(function constructor() {\n  normalizedCenterX = 0.5;\n  normalizedCenterY = 0.5;\n  colors = ['red', 'blue'];\n  Gradient = { RADIAL: 0, LINEAR: 1 };\n  gradientTypes = ['radial', 'linear'];\n  selectedGradient = Gradient.RADIAL;\n})();\n\nfunction updateGradient() {\n  const size = $.gradientView.rect;\n  const minDimension = Math.min(size.width, size.height);\n  const centerPoint = {\n    x: size.width * normalizedCenterX,\n    y: size.height * normalizedCenterY };\n\n\n  const startRadius = minDimension / 2 * ($.startRadiusSlider.value / 100);\n  const endRadius = minDimension / 2 * ($.endRadiusSlider.value / 100);\n\n  const gradient = {\n    type: gradientTypes[selectedGradient] };\n\n\n  // Linear gradients support colors with offsets and start-point / end-point\n  // Radial gradients support raw colors, start-radius / end-radius and backfill-start / backfill-end\n  // Read more: http://docs.appcelerator.com/platform/latest/#!/api/Titanium.UI.View-property-backgroundGradient\n  if (selectedGradient === Gradient.LINEAR) {\n    const startPoint = { x: precisionRound($.startRadiusSlider.value, -1) + '%', y: '50%' };\n    const endPoint = { x: precisionRound($.endRadiusSlider.value, -1) + '%', y: '50%' };\n\n    gradient.colors = [{ color: colors[0], offset: 0.0 }, { color: colors[1], offset: 1.0 }];\n    gradient.startPoint = startPoint;\n    gradient.endPoint = endPoint;\n\n    logger.log('Linear gradient updated: ' + JSON.stringify(centerPoint) + ', start-point: ' + JSON.stringify(startPoint) + ', end-point: ' + JSON.stringify(endPoint));\n  } else {\n    gradient.startPoint = centerPoint;\n    gradient.endPoint = centerPoint;\n    gradient.startRadius = startRadius;\n    gradient.endRadius = endRadius;\n    gradient.backfillStart = $.startFillSwitch.value;\n    gradient.backfillEnd = $.endFillSwitch.value;\n    gradient.colors = colors;\n\n    logger.log('Radial gradient updated: ' + JSON.stringify(centerPoint) + ', start-radius: ' + startRadius + ', end-radius: ' + endRadius);\n  }\n\n  $.gradientView.backgroundGradient = gradient;\n}\n\nfunction handleTouchMove(e) {\n  const size = $.gradientView.rect;\n\n  normalizedCenterX = size.width > 0 ? e.x / size.width : 0.5;\n  normalizedCenterY = size.height > 0 ? e.y / size.height : 0.5;\n\n  updateGradient();\n}\n\nfunction pickRandomColor() {\n  colors = [generateRandomColor(), generateRandomColor()];\n  updateGradient();\n}\n\n// CREDITS: https://stackoverflow.com/a/1484514/5537752\n\nfunction generateRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nfunction handleGradientType(e) {\n  let isLinear;\n  if (OS_IOS) {\n    isLinear = e.index === Gradient.LINEAR;\n    selectedGradient = e.index;\n  } else if ($.gradientTypeSwitch.value) {\n    isLinear = true;\n    selectedGradient = Gradient.LINEAR;\n    $.gradientTypeLabel.text = 'Linear';\n  } else {\n    isLinear = false;\n    selectedGradient = Gradient.RADIAL;\n    $.gradientTypeLabel.text = 'Radial';\n  }\n  $.startFillSwitch.enabled = !isLinear;\n  $.endFillSwitch.enabled = !isLinear;\n  $.startRadiusLabel.text = isLinear ? 'Start Point:' : 'Start Radius:';\n  $.endRadiusLabel.text = isLinear ? 'End Point' : 'End Radius';\n\n  updateGradient();\n}\n\nfunction precisionRound(number, precision) {\n  var factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}"]}]}