{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/sync/sql.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/sync/sql.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/sync/sql.js"],"names":["_","require","backbone","ALLOY_DB_DEFAULT","ALLOY_ID_DEFAULT","S4","Math","random","toString","substring","guid","cache","config","Model","db","getDatabase","name","Ti","Database","open","Migrator","transactionDb","dbname","adapter","db_name","table","collection_name","idAttribute","column","parts","split","type","toLowerCase","API","warn","join","createTable","columns","found","k","push","sql","execute","dropTable","insertRow","columnValues","values","qs","key","deleteRow","keys","len","length","conditions","i","Sync","method","model","opts","dbName","resp","attrObj","id","VERSION","set","silent","names","q","get","lastInsertRowId","toJSON","query","isString","rs","statement","params","fieldNames","fieldCount","isFunction","fieldName","isValidRow","o","field","next","close","success","trigger","fromAdapter","error","GetMigrationFor","mid","Migrate","migrations","lastMigration","prototype","migrator","targetNumber","migration","tmpDb","currentNumber","direction","reverse","context","funcName","installDatabase","dbFile","db_file","rx","match","debug","install","remoteBackup","file","setRemoteBackup","cName","cType","fieldByName","Object","contains","info","fullStrings","colStrings","each","colsString","module","exports","beforeModelCreate","afterModelCreate","sync"],"mappings":"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","sourcesContent":["var _ = require('/alloy/underscore')._,\n\tbackbone = require('/alloy/backbone');\n\n// The database name used when none is specified in the\n// model configuration.\nvar ALLOY_DB_DEFAULT = '_alloy_';\nvar ALLOY_ID_DEFAULT = 'alloy_id';\n\nfunction S4() {\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nfunction guid() {\n\treturn (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\n}\n\nvar cache = {\n\tconfig: {},\n\tModel: {},\n\tdb: {}\n};\n\nfunction getDatabase(name) {\n\tif (!cache.db[name]) {\n\t\tcache.db[name] = Ti.Database.open(name);\n\t}\n\treturn cache.db[name];\n}\n\n// The sql-specific migration object, which is the main parameter\n// to the up() and down() migration functions.\n//\n// db            The database handle for migration processing. Do not open\n//               or close this as it is a running transaction that ensures\n//               data integrity during the migration process.\n// dbname        The name of the SQLite database for this model.\n// table         The name of the SQLite table for this model.\n// idAttribute   The unique ID column for this model, which is\n//               mapped back to Backbone.js for its update and\n//               delete operations.\nfunction Migrator(config, transactionDb) {\n\tthis.db = transactionDb;\n\tthis.dbname = config.adapter.db_name;\n\tthis.table = config.adapter.collection_name;\n\tthis.idAttribute = config.adapter.idAttribute;\n\n\t//TODO: normalize columns at compile time - https://jira.appcelerator.org/browse/ALOY-222\n\tthis.column = function(name) {\n\t\t// split into parts to keep additional column characteristics like\n\t\t// autoincrement, primary key, etc...\n\t\tvar parts = name.split(/\\s+/);\n\t\tvar type = parts[0];\n\t\tswitch (type.toLowerCase()) {\n\t\t\tcase 'string':\n\t\t\tcase 'varchar':\n\t\t\tcase 'date':\n\t\t\tcase 'datetime':\n\t\t\t\tTi.API.warn('\"' + type + '\" is not a valid sqlite field, using TEXT instead');\n\t\t\tcase 'text':\n\t\t\t\ttype = 'TEXT';\n\t\t\t\tbreak;\n\t\t\tcase 'int':\n\t\t\tcase 'tinyint':\n\t\t\tcase 'smallint':\n\t\t\tcase 'bigint':\n\t\t\tcase 'boolean':\n\t\t\t\tTi.API.warn('\"' + type + '\" is not a valid sqlite field, using INTEGER instead');\n\t\t\tcase 'integer':\n\t\t\t\ttype = 'INTEGER';\n\t\t\t\tbreak;\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'decimal':\n\t\t\tcase 'number':\n\t\t\t\tTi.API.warn('\"' + name + '\" is not a valid sqlite field, using REAL instead');\n\t\t\tcase 'real':\n\t\t\t\ttype = 'REAL';\n\t\t\t\tbreak;\n\t\t\tcase 'blob':\n\t\t\t\ttype = 'BLOB';\n\t\t\t\tbreak;\n\t\t\tcase 'null':\n\t\t\t\ttype = 'NULL';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttype = 'TEXT';\n\t\t\t\tbreak;\n\t\t}\n\t\tparts[0] = type;\n\t\treturn parts.join(' ');\n\t};\n\n\tthis.createTable = function(config) {\n\t\t// compose the create query\n\t\tvar columns = [];\n\t\tvar found = false;\n\t\tfor (var k in config.columns) {\n\t\t\tif (k === this.idAttribute) { found = true; }\n\t\t\tcolumns.push(k + ' ' + this.column(config.columns[k]));\n\t\t}\n\n\t\t// add the id field if it wasn't specified\n\t\tif (!found && this.idAttribute === ALLOY_ID_DEFAULT) {\n\t\t\tcolumns.push(ALLOY_ID_DEFAULT + ' TEXT UNIQUE');\n\t\t}\n\t\tvar sql = 'CREATE TABLE IF NOT EXISTS ' + this.table + ' ( ' + columns.join(',') + ')';\n\n\t\t// execute the create\n\t\tthis.db.execute(sql);\n\t};\n\n\tthis.dropTable = function() {\n\t\tthis.db.execute('DROP TABLE IF EXISTS ' + this.table);\n\t};\n\n\tthis.insertRow = function(columnValues) {\n\t\tvar columns = [];\n\t\tvar values = [];\n\t\tvar qs = [];\n\n\t\t// get arrays of column names, values, and value placeholders\n\t\tvar found = false;\n\t\tfor (var key in columnValues) {\n\t\t\tif (key === this.idAttribute) { found = true; }\n\t\t\tcolumns.push(key);\n\t\t\tvalues.push(columnValues[key]);\n\t\t\tqs.push('?');\n\t\t}\n\n\t\t// add the id field if it wasn't specified\n\t\tif (!found && this.idAttribute === ALLOY_ID_DEFAULT) {\n\t\t\tcolumns.push(this.idAttribute);\n\t\t\tvalues.push(guid());\n\t\t\tqs.push('?');\n\t\t}\n\n\t\t// construct and execute the query\n\t\tthis.db.execute('INSERT INTO ' + this.table + ' (' + columns.join(',') + ') VALUES (' + qs.join(',') + ');', values);\n\t};\n\n\tthis.deleteRow = function(columns) {\n\t\tvar sql = 'DELETE FROM ' + this.table;\n\t\tvar keys = _.keys(columns);\n\t\tvar len = keys.length;\n\t\tvar conditions = [];\n\t\tvar values = [];\n\n\t\t// construct the where clause, if necessary\n\t\tif (len) { sql += ' WHERE '; }\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tconditions.push(keys[i] + ' = ?');\n\t\t\tvalues.push(columns[keys[i]]);\n\t\t}\n\t\tsql += conditions.join(' AND ');\n\n\t\t// execute the delete\n\t\tthis.db.execute(sql, values);\n\t};\n}\n\nfunction Sync(method, model, opts) {\n\tvar table =  model.config.adapter.collection_name,\n\t\tcolumns = model.config.columns,\n\t\tdbName = model.config.adapter.db_name || ALLOY_DB_DEFAULT,\n\t\tresp = null,\n\t\tdb, sql;\n\n\tswitch (method) {\n\t\tcase 'create':\n\t\tcase 'update':\n\t\t\tresp = (function() {\n\t\t\t\tvar attrObj = {};\n\n\t\t\t\tif (!model.id) {\n\t\t\t\t\tmodel.id = model.idAttribute === ALLOY_ID_DEFAULT ? guid() : null;\n\t\t\t\t\tattrObj[model.idAttribute] = model.id;\n\t\t\t\t\tbackbone.VERSION === '0.9.2' ? model.set(attrObj, { silent: true }) : model.set(attrObj);\n\t\t\t\t}\n\n\t\t\t\t// assemble columns and values\n\t\t\t\tvar names = [], values = [], q = [];\n\t\t\t\tfor (var k in columns) {\n\t\t\t\t\tnames.push(k);\n\t\t\t\t\tvalues.push(model.get(k));\n\t\t\t\t\tq.push('?');\n\t\t\t\t}\n\n\t\t\t\t// execute the query\n\t\t\t\tsql = 'REPLACE INTO ' + table + ' (' + names.join(',') + ') VALUES (' + q.join(',') + ');';\n\t\t\t\tdb = getDatabase(dbName);\n\t\t\t\tdb.execute(sql, values);\n\n\t\t\t\t// if model.id is still null, grab the last inserted id\n\t\t\t\tif (model.id === null) {\n\t\t\t\t\tmodel.id = db.lastInsertRowId;\n\t\t\t\t\tattrObj[model.idAttribute] = model.id;\n\t\t\t\t\tbackbone.VERSION === '0.9.2' ? model.set(attrObj, { silent: true }) : model.set(attrObj);\n\t\t\t\t}\n\n\t\t\t\treturn model.toJSON();\n\t\t\t})();\n\t\t\tbreak;\n\n\t\tcase 'read':\n\t\t\t// print warning about using both id and query\n\t\t\tif (opts.query && opts.id) {\n\t\t\t\tTi.API.warn('Both \"query\" and \"id\" options were specified for model.fetch(). \"id\" will be ignored.');\n\t\t\t}\n\n\t\t\t// determine the query to execute\n\t\t\tsql = 'SELECT * FROM ' + table;\n\t\t\tif (opts.query) {\n\t\t\t\tsql = opts.query;\n\t\t\t} else if (opts.id) {\n\t\t\t\tsql += ' WHERE ' + (model.idAttribute ? model.idAttribute : ALLOY_ID_DEFAULT) + ' = ' + (_.isString(opts.id) ? '\"' + opts.id + '\"' : opts.id);\n\t\t\t}\n\n\t\t\t// execute the select query\n\t\t\tdb = getDatabase(dbName);\n\t\t\tvar rs;\n\n\t\t\t// is it a string or a prepared statement?\n\t\t\tif (_.isString(sql)) {\n\t\t\t\trs = db.execute(sql);\n\t\t\t} else {\n\t\t\t\trs = db.execute(sql.statement, sql.params);\n\t\t\t}\n\n\t\t\tvar values = [];\n\t\t\tvar fieldNames = [];\n\t\t\tvar fieldCount = _.isFunction(rs.fieldCount) ? rs.fieldCount() : rs.fieldCount;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < fieldCount; i++) {\n\t\t\t\tfieldNames.push(rs.fieldName(i));\n\t\t\t}\n\n\t\t\t// iterate through all queried rows\n\t\t\twhile (rs.isValidRow()) {\n\t\t\t\tvar o = {};\n\t\t\t\tfor (i = 0; i < fieldCount; i++) {\n\t\t\t\t\to[fieldNames[i]] = rs.field(i);\n\t\t\t\t}\n\t\t\t\tvalues.push(o);\n\t\t\t\trs.next();\n\t\t\t}\n\t\t\trs.close();\n\n\t\t\t// shape response based on whether it's a model or collection\n\t\t\tvar len = values.length;\n\n\t\t\tif (backbone.VERSION === '0.9.2') {\n\t\t\t\tmodel.length = len;\n\t\t\t}\n\n\t\t\tresp = (len === 1) ? values[0] : values;\n\t\t\tbreak;\n\n\t\tcase 'delete':\n\t\t\tsql = 'DELETE FROM ' + table + ' WHERE ' + model.idAttribute + '=?';\n\n\t\t\t// execute the delete\n\t\t\tdb = getDatabase(dbName);\n\t\t\tdb.execute(sql, model.id);\n\n\t\t\tresp = model.toJSON();\n\t\t\tbreak;\n\t}\n\n\t// process success/error handlers, if present\n\tif (resp) {\n\t\tif (_.isFunction(opts.success)) { opts.success(resp); }\n\t\tif (method === 'read' && !opts.silent) { model.trigger('fetch', { fromAdapter: true }); }\n\t} else {\n\t\tif (_.isFunction(opts.error)) { opts.error(resp); }\n\t}\n\n}\n\n// Gets the current saved migration\nfunction GetMigrationFor(dbname, table) {\n\tvar mid = null;\n\tvar db = getDatabase(dbname);\n\tdb.execute('CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT);');\n\tvar rs = db.execute('SELECT latest FROM migrations where model = ?;', table);\n\tif (rs.isValidRow()) {\n\t\tmid = rs.field(0) + '';\n\t}\n\trs.close();\n\treturn mid;\n}\n\nfunction Migrate(Model) {\n\t// get list of migrations for this model\n\tvar migrations = Model.migrations || [];\n\n\t// get a reference to the last migration\n\tvar lastMigration = {};\n\tif (migrations.length) { migrations[migrations.length - 1](lastMigration); }\n\n\t// Get config reference\n\tvar config = Model.prototype.config;\n\n\t// Get the db name for this model and set up the sql migration obejct\n\tconfig.adapter.db_name = config.adapter.db_name || ALLOY_DB_DEFAULT;\n\tvar migrator = new Migrator(config);\n\n\t// Get the migration number from the config, or use the number of\n\t// the last migration if it's not present. If we still don't have a\n\t// migration number after that, that means there are none. There's\n\t// no migrations to perform.\n\tvar targetNumber = typeof config.adapter.migration === 'undefined' ||\n\t\tconfig.adapter.migration === null ? lastMigration.id : config.adapter.migration;\n\tif (typeof targetNumber === 'undefined' || targetNumber === null) {\n\t\tvar tmpDb = getDatabase(config.adapter.db_name);\n\t\tmigrator.db = tmpDb;\n\t\tmigrator.createTable(config);\n\t\treturn;\n\t}\n\ttargetNumber = targetNumber + ''; // ensure that it's a string\n\n\t// Create the migration tracking table if it doesn't already exist.\n\t// Get the current saved migration number.\n\tvar currentNumber = GetMigrationFor(config.adapter.db_name, config.adapter.collection_name);\n\n\t// If the current and requested migrations match, the data structures\n\t// match and there is no need to run the migrations.\n\tvar direction;\n\tif (currentNumber === targetNumber) {\n\t\treturn;\n\t} else if (currentNumber && currentNumber > targetNumber) {\n\t\tdirection = 0; // rollback\n\t\tmigrations.reverse();\n\t} else {\n\t\tdirection = 1;  // upgrade\n\t}\n\n\t// open db for our migration transaction\n\tvar db = getDatabase(config.adapter.db_name);\n\tmigrator.db = db;\n\tdb.execute('BEGIN;');\n\n\t// iterate through all migrations based on the current and requested state,\n\t// applying all appropriate migrations, in order, to the database.\n\tif (migrations.length) {\n\t\tfor (var i = 0; i < migrations.length; i++) {\n\t\t\t// create the migration context\n\t\t\tvar migration = migrations[i];\n\t\t\tvar context = {};\n\t\t\tmigration(context);\n\n\t\t\t// if upgrading, skip migrations higher than the target\n\t\t\t// if rolling back, skip migrations lower than the target\n\t\t\tif (direction) {\n\t\t\t\tif (context.id > targetNumber) { break; }\n\t\t\t\tif (context.id <= currentNumber) { continue; }\n\t\t\t} else {\n\t\t\t\tif (context.id <= targetNumber) { break; }\n\t\t\t\tif (context.id > currentNumber) { continue; }\n\t\t\t}\n\n\t\t\t// execute the appropriate migration function\n\t\t\tvar funcName = direction ? 'up' : 'down';\n\t\t\tif (_.isFunction(context[funcName])) {\n\t\t\t\tcontext[funcName](migrator, config);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmigrator.createTable(config);\n\t}\n\n\t// update the saved migration in the db\n\tdb.execute('DELETE FROM migrations where model = ?', config.adapter.collection_name);\n\tdb.execute('INSERT INTO migrations VALUES (?,?)', targetNumber, config.adapter.collection_name);\n\n\t// end the migration transaction\n\tdb.execute('COMMIT;');\n\tmigrator.db = null;\n}\n\nfunction installDatabase(config) {\n\t// get the database name from the db file path\n\tvar dbFile = _.isFunction(config.adapter.db_file) ? config.adapter.db_file(config) : config.adapter.db_file;\n\tvar table = config.adapter.collection_name;\n\n\tvar rx = /(^|.*\\/)([^\\/]+)\\.[^\\/]+$/;\n\tvar match = dbFile.match(rx);\n\tif (match === null) {\n\t\tthrow 'Invalid sql database filename \"' + dbFile + '\"';\n\t}\n\t//var isAbsolute = match[1] ? true : false;\n\tconfig.adapter.db_name = config.adapter.db_name || match[2];\n\tvar dbName = config.adapter.db_name;\n\n\t// install and open the preloaded db\n\tTi.API.debug('Installing sql database \"' + dbFile + '\" with name \"' + dbName + '\"');\n\tvar db = Ti.Database.install(dbFile, dbName);\n\tcache.db[dbName] = db;\n\n\t// set remoteBackup status for iOS\n\tif (config.adapter.remoteBackup === false && OS_IOS) {\n\t\tTi.API.debug('iCloud \"do not backup\" flag set for database \"' + dbFile + '\"');\n\t\tdb.file.setRemoteBackup(false);\n\t}\n\n\t// compose config.columns from table definition in database\n\tvar rs = db.execute('pragma table_info(\"' + table + '\");');\n\tvar columns = {}, cName, cType;\n\tif (rs) {\n\t\twhile (rs.isValidRow()) {\n\t\t\tcName = rs.fieldByName('name');\n\t\t\tcType = rs.fieldByName('type');\n\t\t\tcolumns[cName] = cType;\n\n\t\t\t// see if it already has the ALLOY_ID_DEFAULT\n\t\t\tif (cName === ALLOY_ID_DEFAULT && !config.adapter.idAttribute) {\n\t\t\t\tconfig.adapter.idAttribute = ALLOY_ID_DEFAULT;\n\t\t\t}\n\n\t\t\trs.next();\n\t\t}\n\t\trs.close();\n\t}\n\tif (Object.keys(columns).length === 0) {\n\t\tvar idAttribute = (config.adapter.idAttribute) ? config.adapter.idAttribute : ALLOY_ID_DEFAULT;\n\t\tfor (var k in config.columns) {\n\t\t\tcName = k;\n\t\t\tcType = config.columns[k];\n\n\t\t\t// see if it already has the ALLOY_ID_DEFAULT\n\t\t\tif (cName === ALLOY_ID_DEFAULT && !config.adapter.idAttribute) {\n\t\t\t\tconfig.adapter.idAttribute = ALLOY_ID_DEFAULT;\n\t\t\t} else if (k === config.adapter.idAttribute) {\n\t\t\t\tcType += ' UNIQUE';\n\t\t\t}\n\t\t\tcolumns[cName] = cType;\n\t\t}\n\t}\n\tconfig.columns = columns;\n\n\t// make sure we have a unique id field\n\tif (config.adapter.idAttribute) {\n\t\tif (!_.contains(_.keys(config.columns), config.adapter.idAttribute)) {\n\t\t\tthrow 'config.adapter.idAttribute \"' + config.adapter.idAttribute + '\" not found in list of columns for table \"' + table + '\"\\n' +\n\t\t\t\t'columns: [' + _.keys(config.columns).join(',') + ']';\n\t\t}\n\t} else {\n\t\tTi.API.info('No config.adapter.idAttribute specified for table \"' + table + '\"');\n\t\tTi.API.info('Adding \"' + ALLOY_ID_DEFAULT + '\" to uniquely identify rows');\n\n\t\tvar fullStrings = [],\n\t\t\tcolStrings = [];\n\t\t_.each(config.columns, function(type, name) {\n\t\t\tcolStrings.push(name);\n\t\t\tfullStrings.push(name + ' ' + type);\n\t\t});\n\t\tvar colsString = colStrings.join(',');\n\t\tdb.execute('ALTER TABLE ' + table + ' RENAME TO ' + table + '_temp;');\n\t\tdb.execute('CREATE TABLE ' + table + '(' + fullStrings.join(',') + ',' + ALLOY_ID_DEFAULT + ' TEXT UNIQUE);');\n\t\tdb.execute('INSERT INTO ' + table + '(' + colsString + ',' + ALLOY_ID_DEFAULT + ') SELECT ' + colsString + ',CAST(_ROWID_ AS TEXT) FROM ' + table + '_temp;');\n\t\tdb.execute('DROP TABLE ' + table + '_temp;');\n\t\tconfig.columns[ALLOY_ID_DEFAULT] = 'TEXT UNIQUE';\n\t\tconfig.adapter.idAttribute = ALLOY_ID_DEFAULT;\n\t}\n}\n\nmodule.exports.beforeModelCreate = function(config, name) {\n\t// use cached config if it exists\n\tif (cache.config[name]) {\n\t\treturn cache.config[name];\n\t}\n\n\t// check platform compatibility\n\tif (Ti.Platform.osname === 'mobileweb' || typeof Ti.Database === 'undefined') {\n\t\tthrow 'No support for Titanium.Database in MobileWeb environment.';\n\t}\n\n\t// install database file, if specified\n\tif (config.adapter.db_file) { installDatabase(config); }\n\tif (!config.adapter.idAttribute) {\n\t\tTi.API.info('No config.adapter.idAttribute specified for table \"' + config.adapter.collection_name + '\"');\n\t\tTi.API.info('Adding \"' + ALLOY_ID_DEFAULT + '\" to uniquely identify rows');\n\t\tconfig.columns[ALLOY_ID_DEFAULT] = 'TEXT UNIQUE';\n\t\tconfig.adapter.idAttribute = ALLOY_ID_DEFAULT;\n\t}\n\n\t// add this config to the cache\n\tcache.config[name] = config;\n\n\treturn config;\n};\n\nmodule.exports.afterModelCreate = function(Model, name) {\n\t// use cached Model class if it exists\n\tif (cache.Model[name]) {\n\t\treturn cache.Model[name];\n\t}\n\n\t// create and migrate the Model class\n\tModel = Model || {};\n\tModel.prototype.idAttribute = Model.prototype.config.adapter.idAttribute;\n\tMigrate(Model);\n\n\t// Add the Model class to the cache\n\tcache.Model[name] = Model;\n\n\treturn Model;\n};\n\nmodule.exports.sync = Sync;\n"]}]}