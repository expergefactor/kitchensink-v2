{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/underscore.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/underscore.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/underscore.js"],"names":["root","self","global","previousUnderscore","_","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","Ctor","obj","_wrapped","exports","nodeType","module","VERSION","optimizeCb","func","context","argCount","value","call","index","collection","accumulator","apply","arguments","builtinIteratee","cb","iteratee","identity","isFunction","isObject","matcher","property","Infinity","restArguments","startIndex","length","Math","max","rest","args","baseCreate","result","shallowProperty","key","has","path","deepGet","i","MAX_ARRAY_INDEX","pow","getLength","isArrayLike","each","forEach","map","collect","results","currentKey","createReduce","dir","reducer","memo","initial","reduce","foldl","inject","reduceRight","foldr","find","detect","predicate","keyFinder","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","contains","includes","include","item","fromIndex","guard","values","indexOf","invoke","contextPath","method","pluck","where","attrs","findWhere","lastComputed","computed","v","min","shuffle","sample","n","random","clone","last","rand","temp","sortBy","criteria","sort","left","right","a","b","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","size","pass","first","head","take","array","tail","drop","compact","Boolean","flatten","input","shallow","strict","output","idx","isArguments","j","len","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","object","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","floor","createIndexFinder","predicateFind","isNaN","lastIndexOf","range","start","stop","step","ceil","chunk","count","executeBound","sourceFunc","boundFunc","callingContext","bind","TypeError","bound","callArgs","concat","partial","boundArgs","placeholder","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","proto","prop","allKeys","mapObject","pairs","invert","functions","methods","names","createAssigner","keysFunc","defaults","source","l","extend","extendOwn","assign","keyInObj","pick","omit","String","props","tap","interceptor","isMatch","eq","deepEq","aStack","bStack","type","className","valueOf","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","name","nodelist","document","childNodes","Int8Array","isFinite","isSymbol","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","unescapeMap","createEscaper","escaper","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","escapeRegExp","escapeChar","template","text","settings","oldSettings","offset","variable","render","Function","e","data","argument","chain","instance","_chain","chainResult","mixin","toJSON","define","amd"],"mappings":"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","sourcesContent":["//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n"]}]}