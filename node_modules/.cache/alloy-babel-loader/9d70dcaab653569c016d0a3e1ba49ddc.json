{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/controllers/BaseController.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/controllers/BaseController.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy/Alloy/lib/alloy/controllers/BaseController.js"],"names":["Alloy","require","Backbone","_","Controller","roots","self","getControllerParam","__widgetId","widgetId","name","__controllerPath","__iamalloy","extend","Events","__views","__events","__proxyProperties","setParent","parent","len","length","i","add","addTopLevelView","view","push","addProxyProperty","key","value","removeProxyProperty","getTopLevelViews","getView","id","removeView","getProxyProperty","getViews","destroy","getViewEx","opts","recurse","getProxyPropertyEx","createStyle","UI","create","apiName","addClass","proxy","classes","removeClass","resetClass","updateViews","args","views","isObject","each","keys","elem","substring","indexOf","applyProperties","addListener","type","callback","uniqueId","has","Ti","API","error","addEventListener","handler","getListener","filter","event","index","removeListener","forEach","removeEventListener","module","exports"],"mappings":"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","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n/**\n * @class Alloy.Controller\n * @extends Backbone.Events\n * The base class for Alloy controllers.\n *\n * Each controller is associated with a UI hierarchy, defined in an XML file in the\n * `views` folder. Each element in the view hierarchy is either a Titanium {@link Titanium.UI.View View}\n * or another Alloy controller or widget. Each Alloy controller or widget can additionally contain\n * Titanium Views and/or more controllers and widgets.\n *\n */\nvar Controller = function() {\n\tvar roots = [];\n\tvar self = this;\n\n\tfunction getControllerParam() {\n\t\treturn self.__widgetId ? {\n\t\t\twidgetId: self.__widgetId,\n\t\t\tname: self.__controllerPath\n\t\t} : self.__controllerPath;\n\t}\n\n\tthis.__iamalloy = true;\n\t_.extend(this, Backbone.Events, {\n\t\t__views: {},\n\t\t__events: [],\n\t\t__proxyProperties: {},\n\t\tsetParent: function(parent) {\n\t\t\tvar len = roots.length;\n\n\t\t\tif (!len) { return; }\n\n\t\t\tif (parent.__iamalloy) {\n\t\t\t\tthis.parent = parent.parent;\n\t\t\t} else {\n\t\t\t\tthis.parent = parent;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tif (roots[i].__iamalloy) {\n\t\t\t\t\troots[i].setParent(this.parent);\n\t\t\t\t} else {\n\t\t\t\t\tthis.parent.add(roots[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\taddTopLevelView: function(view) {\n\t\t\troots.push(view);\n\t\t},\n\t\taddProxyProperty: function(key, value) {\n\t\t\tthis.__proxyProperties[key] = value;\n\t\t},\n\t\tremoveProxyProperty: function(key) {\n\t\t\tdelete this.__proxyProperties[key];\n\t\t},\n\n\t\t/**\n\t\t * @method getTopLevelViews\n\t\t * Returns a list of the root view elements associated with this controller.\n\n\t\t * #### Example\n\t\t * The following example displays the `id` of each top-level view associated with the\n\t\t * controller:\n\n\t// index.js\n\tvar views = $.getTopLevelViews();\n\tfor (each in views) {\n\t\tvar view = views[each];\n\t\tconsole.log(view.id);\n\t}\n\n\t\t *\n\t\t *\n\t\t * @return {Array.<(Titanium.UI.View|Alloy.Controller)>}\n\t\t */\n\t\tgetTopLevelViews: function() {\n\t\t\treturn roots;\n\t\t},\n\n\t\t/**\n\t\t * @method getView\n\t\t * Returns the specified view associated with this controller.\n\t\t *\n\t\t * If no `id` is specified, returns the first top-level view.\n\t\t *\n\t\t * #### Example\n\t\t * The following example gets a reference to a `<Window/>` object\n\t\t * with the `id` of \"loginWin\" and then calls its [open()](Titanium.UI.Window) method.\n\n\tvar loginWindow = $.getView('loginWin');\n\tloginWindow.open();\n\t\t *\n\t\t * @param {String} [id] ID of the view to return.\n\t\t * @return {Titanium.UI.View/Alloy.Controller}\n\t\t */\n\t\tgetView: function(id) {\n\t\t\tif (typeof id === 'undefined' || id === null) {\n\t\t\t\treturn roots[0];\n\t\t\t}\n\t\t\treturn this.__views[id];\n\t\t},\n\t\tremoveView: function(id) {\n\t\t\tdelete this[id];\n\t\t\tdelete this.__views[id];\n\t\t},\n\n\t\tgetProxyProperty: function(name) {\n\t\t\treturn this.__proxyProperties[name];\n\t\t},\n\n\t\t/**\n\t\t * @method getViews\n\t\t * Returns a list of all IDed view elements associated with this controller.\n\t\t *\n\t\t * #### Example\n\t\t * Given the following XML view:\n\n\t<Alloy>\n\t\t<TabGroup id=\"tabs\">\n\t\t\t<Tab title=\"Tab 1\" icon=\"KS_nav_ui.png\" id=\"tab1\">\n\t\t\t\t<Window title=\"Tab 1\" id=\"win1\">\n\t\t\t\t\t<Label id=\"label1\">I am Window 1</Label>\n\t\t\t\t</Window>\n\t\t\t</Tab>\n\t\t\t<Tab title=\"Tab 2\" icon=\"KS_nav_views.png\" id=\"tab2\">\n\t\t\t\t<Window title=\"Tab 2\" id=\"wind2\">\n\t\t\t\t\t<Label id=\"label2\">I am Window 2</Label>\n\t\t\t\t</Window>\n\t\t\t</Tab>\n\t\t</TabGroup>\n\t\t<View id=\"otherview\"></View>\n\t</Alloy>\n\n\t\t* The following view-controller outputs the id of each view in the hierarchy.\n\n\tvar views = $.getViews();\n\tfor (each in views) {\n\t\tvar view = views[each];\n\t\tconsole.log(view.id);\n\t}\n\n\t[INFO] :   win1\n\t[INFO] :   label1\n\t[INFO] :   tab1\n\t[INFO] :   wind2\n\t[INFO] :   label2\n\t[INFO] :   tab2\n\t[INFO] :   tabs\n\t[INFO] :   otherview\n\n\t\t * @return {Array.<(Titanium.UI.View|Alloy.Controller)>}\n\t\t */\n\t\tgetViews: function() {\n\t\t\treturn this.__views;\n\t\t},\n\n\t\t/**\n\t\t * @method destroy\n\t\t * Frees binding resources associated with this controller and its\n\t\t * UI components. It is critical that this is called when employing\n\t\t * model/collection binding in order to avoid potential memory leaks.\n\t\t * $.destroy() should be called whenever a controller's UI is to\n\t\t * be \"closed\" or removed from the app. See the [Destroying Data Bindings](#!/guide/Destroying_Data_Bindings)\n\t\t * test application for an example of this approach.\n\n\t\t * #### Example\n\t\t * In the following example the view-controller for a {@link Titanium.UI.Window Window} object named `dialog`\n\t\t * calls its `destroy()` method in response to the Window object being closed.\n\n\n\t$.dialog.addEventListener('close', function() {\n\t\t$.destroy();\n\t});\n\t\t */\n\t\tdestroy: function() {\n\t\t\t// destroy() is defined during the compile process based on\n\t\t\t// the UI components and binding contained within the controller.\n\t\t},\n\n\t\t// getViewEx for advanced parsing and element traversal\n\t\tgetViewEx: function(opts) {\n\t\t\tvar recurse = opts.recurse || false;\n\t\t\tif (recurse) {\n\t\t\t\tvar view = this.getView();\n\t\t\t\tif (!view) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (view.__iamalloy) {\n\t\t\t\t\treturn view.getViewEx({ recurse: true });\n\t\t\t\t} else {\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.getView();\n\t\t\t}\n\t\t},\n\n\t\t// getProxyPropertyEx for advanced parsing and element traversal\n\t\tgetProxyPropertyEx: function(name, opts) {\n\t\t\tvar recurse = opts.recurse || false;\n\t\t\tif (recurse) {\n\t\t\t\tvar view = this.getProxyProperty(name);\n\t\t\t\tif (!view) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (view.__iamalloy) {\n\t\t\t\t\treturn view.getProxyProperty(name, { recurse: true });\n\t\t\t\t} else {\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.getView(name);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @method createStyle\n\t\t * Creates a dictionary of properties based on the specified styles.\n\t\t *\n\t\t *\n\t\t * You can use this dictionary with the view object's\n\t\t * {@link Titanium.UI.View#method-applyProperties applyProperties} method\n\t\t * or a create object method, such as {@link Titanium.UI#method-createView Titanium.UI.createView}.\n\t\t * #### Examples\n\t\t * The following creates a new style object that is passed as a parameter\n\t\t * to the {@link Titanium.UI#method-createLabel Ti.UI.createLabel()} method.\n\n\tvar styleArgs = {\n\tapiName: 'Ti.UI.Label',\n\t\tclasses: ['blue','shadow','large'],\n\t\tid: 'tester',\n\t\tborderWidth: 2,\n\t\tborderRadius: 16,\n\t\tborderColor: '#000'\n\t};\n\tvar styleObject = $.createStyle(styleArgs);\n\ttestLabel = Ti.UI.createLabel(styleObject);\n\n\t\t * The next example uses the {@link Titanium#method-applyProperties applyProperties()} method\n\t\t * to apply a style object to an existing Button control (button not shown).\n\n\tvar style = $.createStyle({\n\t\tclasses: args.button,\n\t\tapiName: 'Button',\n\t\tcolor: 'blue'\n\t});\n\t$.button.applyProperties(style);\n\t\t * @param {AlloyStyleDict} opts Dictionary of styles to apply.\n\t\t *\n\t\t * @return {Dictionary}\n\t\t * @since 1.2.0\n\n\t\t */\n\t\tcreateStyle: function(opts) {\n\t\t\treturn Alloy.createStyle(getControllerParam(), opts);\n\t\t},\n\n\t\t/*\n\t\t * Documented in docs/apidoc/controller.js\n\t\t */\n\t\tUI: {\n\t\t\tcreate: function(apiName, opts) {\n\t\t\t\treturn Alloy.UI.create(getControllerParam(), apiName, opts);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @method addClass\n\t\t * Adds a TSS class to the specified view object.\n\t\t *\n\t\t * You can apply additional styles with the `opts` parameter. To use this method\n\t\t * effectively you may need to enable autostyling\n\t\t * on the target XML view. See [Autostyle](#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle)\n\t\t * in the Alloy developer guide.\n\t\t * #### Example\n\t\t * The following adds the TSS classes \".redbg\" and \".bigger\" to a {@link Titanium.UI.Label}\n\t\t * object proxy `label1`, and also sets the label's `text` property to \"Cancel\".\n\n\t// index.js\n\t$.addClass($.label1, 'redbg bigger', {text: \"Cancel\"});\n\nThe 'redbg' and 'bigger' classes are shown below:\n\n\t// index.tss\n\t\".redbg\" : {\n\t\tcolor: 'red'\n\t}\n\t\".bigger\": {\n\t\tfont : {\n\t\t   fontSize: '36'\n\t\t}\n\t}\n\n\t\t * @param {Object} proxy View object to which to add class(es).\n\t\t * @param {Array<String>/String} classes Array or space-separated list of classes to apply.\n\t\t * @param {Dictionary} [opts] Dictionary of properties to apply after classes have been added.\n\t\t * @since 1.2.0\n\t\t */\n\t\taddClass: function(proxy, classes, opts) {\n\t\t\treturn Alloy.addClass(getControllerParam(), proxy, classes, opts);\n\t\t},\n\n\t\t/**\n\t\t * @method removeClass\n\t\t * Removes a TSS class from the specified view object.\n\t\t *\n\t\t * You can apply additional styles after the removal with the `opts` parameter.\n\t\t * To use this method effectively you may need to enable autostyling\n\t\t * on the target XML view. See [Autostyle](#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle)\n\t\t * in the Alloy developer guide.\n\t\t * #### Example\n\t\t * The following removes the \"redbg\" and \"bigger\" TSS classes from a {@link Titanium.UI.Label}\n\t\t * object proxy `label1`, and also sets the label's `text` property to \"...\".\n\n\t$.removeClass($.label1, 'redbg bigger', {text: \"...\"});\n\n\t\t * @param {Object} proxy View object from which to remove class(es).\n\t\t * @param {Array<String>/String} classes Array or space-separated list of classes to remove.\n\t\t * @param {Dictionary} [opts] Dictionary of properties to apply after the class removal.\n\t\t * @since 1.2.0\n\t\t */\n\t\tremoveClass: function(proxy, classes, opts) {\n\t\t\treturn Alloy.removeClass(getControllerParam(), proxy, classes, opts);\n\t\t},\n\n\t\t/**\n\t\t * @method resetClass\n\t\t * Sets the array of TSS classes for the target View object, adding the classes specified and\n\t\t * removing any applied classes that are not specified.\n\t\t *\n\t\t * You can apply classes or styles after the reset using the `classes` or `opts` parameters.\n\t\t * To use this method effectively you may need to enable autostyling\n\t\t * on the target XML view. See [Autostyle](#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle)\n\t\t * in the Alloy developer guide.\n\n\t\t * #### Example\n\t\t * The following removes all previously applied styles on `label1` and then applies\n\t\t * the TSS class 'no-style'.\n\n\t$.resetClass($.label1, 'no-style');\n\t\t * @param {Object} proxy View object to reset.\n\t\t * @param {Array<String>/String} [classes] Array or space-separated list of classes to apply after the reset.\n\t\t * @param {Dictionary} [opts] Dictionary of properties to apply after the reset.\n\t\t * @since 1.2.0\n\t\t */\n\t\tresetClass: function(proxy, classes, opts) {\n\t\t\treturn Alloy.resetClass(getControllerParam(), proxy, classes, opts);\n\t\t},\n\n\t\t/**\n\t\t * @method updateViews\n\t\t * Applies a set of properties to view elements associated with this controller.\n\t\t * This method is useful for setting properties on repeated elements such as\n\t\t * {@link Titanium.UI.TableViewRow TableViewRow} objects, rather than needing to have a controller\n\t\t * for those child controllers.\n\t\t * #### Example\n\t\t * The following example uses this method to update a Label inside a TableViewRow object\n\t\t * before adding it to a TableView.\n\n\t\t * View-controller file: controllers/index.js\n\n\tfor (var i=0; i < 10; i++) {\n\t  var row = Alloy.createController(\"tablerow\");\n\t  row.updateViews({\n\t  \t\"#theLabel\": {\n\t  \t\ttext: \"I am row #\" + i\n\t  \t}\n\t  });\n\t  $.tableView.appendRow(row.getView());\n\t};\n\n\t\t\t * XML view: views/tablerow.xml\n\n\t<Alloy>\n\t\t<TableViewRow>\n\t\t\t<Label id=\"theLabel\"></Label>\n\t\t</TableViewRow>\n\t</Alloy>\n\n\t\t\t * XML view: views/index.xml\n\n\t<TableView id=\"tableView\">\n\t</TableView>\n\t\t * @param {Object} args An object whose keys are the IDs (in form '#id') of views to which the styles will be applied.\n\t\t * @since 1.4.0\n\n\t\t */\n\t\tupdateViews: function(args) {\n\t\t\tvar views = this.getViews();\n\t\t\tif (_.isObject(args)) {\n\t\t\t\t_.each(_.keys(args), function(key) {\n\t\t\t\t\tvar elem = views[key.substring(1)];\n\t\t\t\t\tif (key.indexOf('#') === 0 && key !== '#' && _.isObject(elem) && typeof elem.applyProperties === 'function') {\n\t\t\t\t\t\t// apply the properties but make sure we're applying them to a Ti.UI object (not a controller)\n\t\t\t\t\t\telem.applyProperties(args[key]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * @method addListener\n\t\t * Adds a tracked event listeners to a view proxy object.\n\t\t * By default, any event listener declared in XML is tracked by Alloy.\n\t\t *\n\t\t * #### Example\n\t\t * Add an event to the tracking target.\n\n\t$.addListener($.aView, 'click', onClick);\n\n\t\t * @param {Object} proxy Proxy view object to listen to.\n\t\t * @param {String} type Name of the event.\n\t\t * @param {Function} callback Callback function to invoke when the event is fired.\n\t\t * @returns {String} ID attribute of the view object.  If one does not exist, Alloy will create a unique ID.\n\t\t * @since 1.7.0\n\t\t */\n\t\taddListener: function(proxy, type, callback) {\n\t\t\tif (!proxy.id) {\n\t\t\t\tproxy.id = _.uniqueId('__trackId');\n\n\t\t\t\tif (_.has(this.__views, proxy.id)) {\n\t\t\t\t\tTi.API.error('$.addListener: ' + proxy.id + ' was conflict.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproxy.addEventListener(type, callback);\n\t\t\tthis.__events.push({\n\t\t\t\tid: proxy.id,\n\t\t\t\tview: proxy,\n\t\t\t\ttype: type,\n\t\t\t\thandler: callback\n\t\t\t});\n\n\t\t\treturn proxy.id;\n\t\t},\n\n\t\t/**\n\t\t * @method getListener\n\t\t * Gets all the tracked event listeners of the view-controller or\n\t\t * only the ones specified by the parameters.  Passing no parameters,\n\t\t * retrieves all tracked event listeners. Set a parameter to `null`\n\t\t * if you do not want to restrict the match to that parameter.\n\t\t *\n\t\t * #### Example\n\t\t * Get all events bound to the view-controller.\n\n\tvar listener = $.getListener();\n\n\t\t * @param {Object} [proxy] Proxy view object.\n\t\t * @param {String} [type] Name of the event.\n\t\t * @returns {Array<TrackedEventListener>} List of tracked event listeners.\n\t\t * @since 1.7.0\n\t\t */\n\n\t\tgetListener: function(proxy, type) {\n\t\t\treturn _.filter(this.__events, function(event, index) {\n\t\t\t\tif ((!proxy || proxy.id === event.id) &&\n\t\t\t\t\t(!type || type === event.type)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @method removeListener\n\t\t * Removes all tracked event listeners or only the ones\n\t\t * specified by the parameters. Passing no parameters,\n\t\t * removes all tracked event listeners.  Set a parameter to `null`\n\t\t * if you do not want to restrict the match to that parameter.\n\t\t *\n\t\t * #### Example\n\t\t * When the window is closed, remove all tracked event listeners.\n\n\t<Alloy>\n\t\t<Window onOpen=\"doOpen\" onClose=\"doClose\">\n\t\t\t<Label id=\"label\" onClick=\"doClick\">Hello, world</Label>\n\t\t</Window>\n\t</Alloy>\n\n\tfunction doClose() {\n\t\t$.removeListener();\n\t}\n\t\t * @param {Object} [proxy] Proxy view object to remove event listeners from.\n\t\t * @param {String} [type] Name of the event to remove.\n\t\t * @param {Function} [callback] Callback to remove.\n\t\t * @returns {Alloy.Controller} Controller instance.\n\t\t * @since 1.7.0\n\t\t */\n\t\tremoveListener: function(proxy, type, callback) {\n\t\t\tthis.__events.forEach(function(event, index) {\n\t\t\t\tif ((!proxy || proxy.id === event.id) &&\n\t\t\t\t\t(!type || type === event.type) &&\n\t\t\t\t\t(!callback || callback === event.handler)) {\n\t\t\t\t\tevent.view.removeEventListener(event.type, event.handler);\n\t\t\t\t\tdelete self.__events[index];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\t});\n};\nmodule.exports = Controller;\n"]}]}