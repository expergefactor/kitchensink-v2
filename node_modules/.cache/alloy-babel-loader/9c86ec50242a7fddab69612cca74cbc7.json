{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/accelerometer.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/accelerometer.js","mtime":1603117181820},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/views/phone/accelerometer.xml","mtime":1603117232933},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/styles/phone/accelerometer.tss","mtime":1603117222706},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFsbG95IGZyb20gJy9hbGxveSc7CnZhciBCYWNrYm9uZSA9IEFsbG95LkJhY2tib25lOwp2YXIgXyA9IEFsbG95Ll87CmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ2xvZ2dlcic7Ci8qKgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBUaGUgc2NvcGVkIGNvbnN0cnVjdG9yIG9mIHRoZSBjb250cm9sbGVyLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiovCgpmdW5jdGlvbiBfX3Byb2Nlc3NBcmcob2JqLCBrZXkpIHsKICB2YXIgYXJnID0gbnVsbDsKCiAgaWYgKG9iaikgewogICAgYXJnID0gb2JqW2tleV0gfHwgbnVsbDsKICB9CgogIHJldHVybiBhcmc7Cn0KCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnRyb2xsZXIoKSB7CiAgcmVxdWlyZSgnL2FsbG95L2NvbnRyb2xsZXJzLycgKyAnQmFzZUNvbnRyb2xsZXInKS5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKTsKCiAgdGhpcy5fX2NvbnRyb2xsZXJQYXRoID0gJ3Bob25lL2FjY2VsZXJvbWV0ZXInOwogIHRoaXMuYXJncyA9IGFyZ3VtZW50c1swXSB8fCB7fTsKCiAgaWYgKGFyZ3VtZW50c1swXSkgewogICAgdmFyIF9fcGFyZW50U3ltYm9sID0gX19wcm9jZXNzQXJnKGFyZ3VtZW50c1swXSwgJ19fcGFyZW50U3ltYm9sJyk7CgogICAgdmFyICRtb2RlbCA9IF9fcHJvY2Vzc0FyZyhhcmd1bWVudHNbMF0sICckbW9kZWwnKTsKCiAgICB2YXIgX19pdGVtVGVtcGxhdGUgPSBfX3Byb2Nlc3NBcmcoYXJndW1lbnRzWzBdLCAnX19pdGVtVGVtcGxhdGUnKTsKICB9CgogIHZhciAkID0gdGhpczsKICB2YXIgZXhwb3J0cyA9IHt9OwogIHZhciBfX2RlZmVycyA9IHt9OyAvLyBHZW5lcmF0ZWQgY29kZSB0aGF0IG11c3QgYmUgZXhlY3V0ZWQgYmVmb3JlIGFsbCBVSSBhbmQvb3IKICAvLyBjb250cm9sbGVyIGNvZGUuIE9uZSBleGFtcGxlIGlzIGFsbCBtb2RlbCBhbmQgY29sbGVjdGlvbgogIC8vIGRlY2xhcmF0aW9ucyBmcm9tIG1hcmt1cC4KICAvLyBHZW5lcmF0ZWQgVUkgY29kZQoKICAkLl9fdmlld3NbImFjY2VsZXJvbWV0ZXIiXSA9IFRpLlVJLmNyZWF0ZVdpbmRvdyh7CiAgICBiYWNrZ3JvdW5kQ29sb3I6ICJ3aGl0ZSIsCiAgICBvcmllbnRhdGlvbk1vZGVzOiBbVGkuVUkuUE9SVFJBSVRdLAogICAgYmFyQ29sb3I6IEFsbG95LkNGRy5zdHlsZXMudGludENvbG9yLAogICAgbmF2VGludENvbG9yOiAid2hpdGUiLAogICAgdHJhbnNsdWNlbnQ6IGZhbHNlLAogICAgYmFja0J1dHRvblRpdGxlOiAiIiwKICAgIHRpdGxlQXR0cmlidXRlczogewogICAgICBjb2xvcjogIndoaXRlIgogICAgfSwKICAgIHRpdGxlOiAiQWNjZWxlcm9tZXRlciIsCiAgICBpZDogImFjY2VsZXJvbWV0ZXIiCiAgfSk7CiAgJC5fX3ZpZXdzWyJhY2NlbGVyb21ldGVyIl0gJiYgJC5hZGRUb3BMZXZlbFZpZXcoJC5fX3ZpZXdzWyJhY2NlbGVyb21ldGVyIl0pOwogICQuX192aWV3c1sidmlldyJdID0gVGkuVUkuY3JlYXRlVmlldyh7CiAgICBsYXlvdXQ6ICJ2ZXJ0aWNhbCIsCiAgICB3aWR0aDogVGkuVUkuU0laRSwKICAgIGhlaWdodDogVGkuVUkuU0laRSwKICAgIGlkOiAidmlldyIKICB9KTsKCiAgJC5fX3ZpZXdzWyJhY2NlbGVyb21ldGVyIl0uYWRkKCQuX192aWV3c1sidmlldyJdKTsKCiAgJC5fX3ZpZXdzWyJhY2NlbF94Il0gPSBUaS5VSS5jcmVhdGVMYWJlbCh7CiAgICBpZDogImFjY2VsX3giLAogICAgdGV4dDogMAogIH0pOwoKICAkLl9fdmlld3NbInZpZXciXS5hZGQoJC5fX3ZpZXdzWyJhY2NlbF94Il0pOwoKICAkLl9fdmlld3NbImFjY2VsX3kiXSA9IFRpLlVJLmNyZWF0ZUxhYmVsKHsKICAgIGlkOiAiYWNjZWxfeSIsCiAgICB0ZXh0OiAwCiAgfSk7CgogICQuX192aWV3c1sidmlldyJdLmFkZCgkLl9fdmlld3NbImFjY2VsX3kiXSk7CgogICQuX192aWV3c1siYWNjZWxfeiJdID0gVGkuVUkuY3JlYXRlTGFiZWwoewogICAgaWQ6ICJhY2NlbF96IiwKICAgIHRleHQ6IDAKICB9KTsKCiAgJC5fX3ZpZXdzWyJ2aWV3Il0uYWRkKCQuX192aWV3c1siYWNjZWxfeiJdKTsKCiAgZXhwb3J0cy5kZXN0cm95ID0gZnVuY3Rpb24gKCkge307IC8vIG1ha2UgYWxsIElEZWQgZWxlbWVudHMgaW4gJC5fX3ZpZXdzIGF2YWlsYWJsZSByaWdodCBvbiB0aGUgJCBpbiBhCiAgLy8gY29udHJvbGxlcidzIGludGVybmFsIGNvZGUuIEV4dGVybmFsbHkgdGhlIElEZWQgZWxlbWVudHMgd2lsbAogIC8vIGJlIGFjY2Vzc2VkIHdpdGggZ2V0VmlldygpLgoKCiAgXy5leHRlbmQoJCwgJC5fX3ZpZXdzKTsgLy8gQ29udHJvbGxlciBjb2RlIGRpcmVjdGx5IGZyb20gdGhlIGRldmVsb3BlcidzIGNvbnRyb2xsZXIgZmlsZQoKICAvKioKICAgKiBUaGUgc2NvcGVkIGNvbnN0cnVjdG9yIG9mIHRoZSBjb250cm9sbGVyLgogICAqKi8KCgogIChmdW5jdGlvbiBjb25zdHJ1Y3RvcigpIHsKICAgIHZhciBhY2NlbGVyb21ldGVyQ2FsbGJhY2sgPSAoewogICAgICB4LAogICAgICB5LAogICAgICB6CiAgICB9KSA9PiB7CiAgICAgICQuYWNjZWxfeC50ZXh0ID0gIng6ICIuY29uY2F0KHgudG9GaXhlZCgzKSk7CiAgICAgICQuYWNjZWxfeS50ZXh0ID0gInk6ICIuY29uY2F0KHkudG9GaXhlZCgzKSk7CiAgICAgICQuYWNjZWxfei50ZXh0ID0gIno6ICIuY29uY2F0KHoudG9GaXhlZCgzKSk7CiAgICB9OwoKICAgIGlmIChUaS5QbGF0Zm9ybS5tb2RlbCA9PT0gJ1NpbXVsYXRvcicgfHwgVGkuUGxhdGZvcm0ubW9kZWwuaW5kZXhPZignc2RrJykgIT09IC0xKSB7CiAgICAgIGFsZXJ0KCdBY2NlbGVyb21ldGVyIGRvZXMgbm90IHdvcmsgb24gYSB2aXJ0dWFsIGRldmljZScpOwogICAgICByZXR1cm47CiAgICB9CgogICAgVGkuQWNjZWxlcm9tZXRlci5hZGRFdmVudExpc3RlbmVyKCd1cGRhdGUnLCBhY2NlbGVyb21ldGVyQ2FsbGJhY2spOwoKICAgIGlmIChmYWxzZSkgewogICAgICAkLmFjY2VsZXJvbWV0ZXIuYWRkRXZlbnRMaXN0ZW5lcignb3BlbicsICgpID0+IHsKICAgICAgICAkLmFjY2VsZXJvbWV0ZXIuYWN0aXZpdHkuYWRkRXZlbnRMaXN0ZW5lcigncGF1c2UnLCAoKSA9PiB7CiAgICAgICAgICBsb2dnZXIubG9nKCdUaS5BY2NlbGVyb21ldGVyJywgJ3JlbW92aW5nIGFjY2VsZXJvbWV0ZXIgY2FsbGJhY2sgb24gcGF1c2UnKTsKICAgICAgICAgIFRpLkFjY2VsZXJvbWV0ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndXBkYXRlJywgYWNjZWxlcm9tZXRlckNhbGxiYWNrKTsKICAgICAgICB9KTsKICAgICAgICAkLmFjY2VsZXJvbWV0ZXIuYWN0aXZpdHkuYWRkRXZlbnRMaXN0ZW5lcigncmVzdW1lJywgKCkgPT4gewogICAgICAgICAgbG9nZ2VyLmxvZygnVGkuQWNjZWxlcm9tZXRlcicsICdhZGRpbmcgYWNjZWxlcm9tZXRlciBjYWxsYmFjayBvbiByZXN1bWUnKTsKICAgICAgICAgIFRpLkFjY2VsZXJvbWV0ZXIuYWRkRXZlbnRMaXN0ZW5lcigndXBkYXRlJywgYWNjZWxlcm9tZXRlckNhbGxiYWNrKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSkoKTsgLy8gR2VuZXJhdGVkIGNvZGUgdGhhdCBtdXN0IGJlIGV4ZWN1dGVkIGFmdGVyIGFsbCBVSSBhbmQKICAvLyBjb250cm9sbGVyIGNvZGUuIE9uZSBleGFtcGxlIGRlZmVycmVkIGV2ZW50IGhhbmRsZXJzIHdob3NlCiAgLy8gZnVuY3Rpb25zIGFyZSBub3QgZGVmaW5lZCB1bnRpbCBhZnRlciB0aGUgY29udHJvbGxlciBjb2RlCiAgLy8gaXMgZXhlY3V0ZWQuCiAgLy8gRXh0ZW5kIHRoZSAkIGluc3RhbmNlIHdpdGggYWxsIGZ1bmN0aW9ucyBhbmQgcHJvcGVydGllcwogIC8vIGRlZmluZWQgb24gdGhlIGV4cG9ydHMgb2JqZWN0LgoKCiAgXy5leHRlbmQoJCwgZXhwb3J0cyk7Cn0="},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/phone/accelerometer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;AACA,GAAA,SAAA,WAAA,GAAA;AACA,QAAA,qBAAA,GAAA,CAAA;AAAA,MAAA,CAAA;AAAA,MAAA,CAAA;AAAA,MAAA;AAAA,KAAA,KAAA;AACA,MAAA,CAAA,CAAA,OAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,MAAA,CAAA,CAAA,OAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,MAAA,CAAA,CAAA,OAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,KAJA;;AAMA,QAAA,EAAA,CAAA,QAAA,CAAA,KAAA,KAAA,WAAA,IAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA;AACA,MAAA,KAAA,CAAA,iDAAA,CAAA;AACA;AACA;;AAEA,IAAA,EAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,qBAAA;;AAEA,eAAA;AACA,MAAA,CAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,MAAA;AACA,QAAA,CAAA,CAAA,aAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,0CAAA;AACA,UAAA,EAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,qBAAA;AACA,SAHA;AAIA,QAAA,CAAA,CAAA,aAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,yCAAA;AACA,UAAA,EAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,qBAAA;AACA,SAHA;AAIA,OATA;AAUA;AAEA,GA3BA,I","sourcesContent":["\n\n/**\n * The scoped constructor of the controller.\n **/\n(function constructor() {\n  const accelerometerCallback = ({ x, y, z }) => {\n    $.accel_x.text = `x: ${x.toFixed(3)}`;\n    $.accel_y.text = `y: ${y.toFixed(3)}`;\n    $.accel_z.text = `z: ${z.toFixed(3)}`;\n  };\n\n  if (Ti.Platform.model === 'Simulator' || Ti.Platform.model.indexOf('sdk') !== -1) {\n    alert('Accelerometer does not work on a virtual device');\n    return;\n  }\n\n  Ti.Accelerometer.addEventListener('update', accelerometerCallback);\n\n  if (OS_ANDROID) {\n    $.accelerometer.addEventListener('open', () => {\n      $.accelerometer.activity.addEventListener('pause', () => {\n        logger.log('Ti.Accelerometer', 'removing accelerometer callback on pause');\n        Ti.Accelerometer.removeEventListener('update', accelerometerCallback);\n      });\n      $.accelerometer.activity.addEventListener('resume', () => {\n        logger.log('Ti.Accelerometer', 'adding accelerometer callback on resume');\n        Ti.Accelerometer.addEventListener('update', accelerometerCallback);\n      });\n    });\n  }\n\n})();"]}]}