{"remainingRequest":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js??ref--4-2!/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/listview.js","dependencies":[{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/listview.js","mtime":1603117181811},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/views/controls/views/listview.xml","mtime":1603117232925},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/styles/controls/views/listview.tss","mtime":1603117222699},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/node_modules/alloy-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ssaddique/Axway/KitchenSink-v2-update/kitchensink-v2/app/controllers/controls/views/listview.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;AACA,GAAA,SAAA,WAAA,GAAA,CAEA,CAFA;;AAIA,WAAA,SAAA,GAAA;AACA;AACA,IAAA,UAAA,CAAA,MAAA;AACA,MAAA,CAAA,CAAA,OAAA,CAAA,aAAA;AACA,MAAA,MAAA,CAAA,GAAA,CAAA,0CAAA;AACA,KAHA,EAGA,IAHA,CAAA;AAIA;;AAEA,WAAA,mBAAA,CAAA,CAAA,EAAA;AACA,IAAA,MAAA,CAAA,GAAA,CAAA,sCAAA,EAAA,CAAA,CAAA,YAAA,GAAA,KAAA,GAAA,CAAA,CAAA,SAAA;;AACA,eAAA;AACA,WAAA,YAAA,CAAA,CAAA,CAAA,YAAA,EAAA,CAAA,CAAA,SAAA;AACA;AACA,G","sourcesContent":["\n\n/**\n * The scoped constructor of the controller.\n **/\n(function constructor() {\n\n})();\n\nfunction fetchData() {\n  // You would usually fetch your remote data here\n  setTimeout(() => {\n    $.refresh.endRefreshing();\n    logger.log('Ti.UI.RefreshControl finished refreshing');\n  }, 1000);\n}\n\nfunction handleListViewClick(e) {\n  logger.log('Ti.UI.ListView clicked cell at index', e.sectionIndex + ' / ' + e.itemIndex);\n  if (OS_IOS) {\n    this.deselectItem(e.sectionIndex, e.itemIndex);\n  }\n}"]}]}